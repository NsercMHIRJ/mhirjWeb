{"ast":null,"code":"var _jsxFileName = \"/Users/kanu/Desktop/MHIRJTEST/mhirjWeb/src/Components/Correlation/PMTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport DatePicker from '../MdcMessages/GenerateReport/DatePicker';\nimport { ATAMainSelector, EqIDSelector } from '../MdcMessages/GenerateReport/Selectors';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport CorrelationSubTable from './CorrelationSubTable'; //Date Imports\n\nimport { DateConverter } from '../Helper/Helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  form: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1)\n    }\n  },\n  paper: {\n    margin: '20px auto 23px 20px',\n    width: '92vw'\n  },\n  container: {\n    padding: '20px 40px'\n  },\n  button: {\n    height: '50px',\n    width: '100%',\n    backgroundColor: \"#C5D3E0\"\n  },\n  Grid: {\n    paddingLeft: '30px',\n    margin: 'auto'\n  },\n  card: {\n    backgroundColor: \"#C5D3E0\",\n    textAlign: 'center',\n    justify: 'center',\n    padding: '5px'\n  },\n  formLabel: {\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: '20px'\n  },\n  TableGrid: {\n    paddingLeft: '11px',\n    margin: '0px',\n    width: '94vw'\n  }\n}));\n\nconst PMTable = props => {\n  _s();\n\n  const classes = useStyles();\n  const [dateFrom, setDateFrom] = useState();\n  const [dateTo, setDateTo] = useState();\n  const [ATAMain, setATAMain] = useState();\n  const [EqID, setEqID] = useState('');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [PMValue, setPMValue] = useState(0);\n\n  const handleDateFrom = date => {\n    setDateFrom(date);\n  };\n\n  const handleDateTo = date => {\n    setDateTo(date);\n  };\n\n  const handleATAChange = ATA => {\n    setATAMain(ATA);\n  };\n\n  const handleEqIDChange = eqIDList => {\n    setEqID(eqIDList);\n  };\n\n  const [PMConditions, setPMConditions] = useState('');\n\n  const handleGeneratePMTable = () => {\n    setPMConditions({\n      dateFrom: dateFrom,\n      dateTo: dateTo,\n      EqID: EqID,\n      ATAMain: ATAMain\n    });\n    setData([]);\n    setPMValue(1);\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    let flag = false;\n    Object.values(PMConditions).map(item => {\n      if (item === \"\" || item === \"('')\") {\n        flag = true;\n        setLoading(false);\n      }\n    });\n\n    if (flag === false) {\n      const path = 'https://mhirjapi.azurewebsites.net/api/corelation/' + PMConditions.dateFrom + '/' + PMConditions.dateTo + '/' + PMConditions.EqID + '/' + PMConditions.ATAMain;\n      axios.post(path).then(function (res) {\n        var data = JSON.parse(res.data);\n        setData(data);\n        setLoading(false);\n      }).catch(function (err) {\n        console.log(err);\n        setLoading(false);\n      });\n    }\n  }, [PMConditions]);\n  const columns = [{\n    name: \"p_id\",\n    label: \"p_id\",\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'operator',\n    label: 'Operator',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'model',\n    label: 'Model',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap',\n          minWidth: \"90px\"\n        }\n      })\n    }\n  }, {\n    name: 'type',\n    label: 'Type',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'serialNo',\n    label: 'Serial_No',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'date',\n    label: 'Date',\n    options: {\n      filter: false,\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'failureFlag',\n    label: 'Failure Flag',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'maintTrans',\n    label: 'MaintTrans',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'maintCanc',\n    label: 'Maintenance Cancellations',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'maintDel',\n    label: 'Maintenance Delays',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap',\n          minWidth: \"120px\"\n        }\n      })\n    }\n  }, {\n    name: 'inspection',\n    label: 'Inspection',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'campType',\n    label: 'Camp Type',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'MRB',\n    label: 'MRB',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap',\n          minWidth: \"100px\"\n        }\n      })\n    }\n  }, {\n    name: 'discrepancy',\n    label: 'Discrepancy',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'corActions',\n    label: 'Corrective Action',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'totalHours',\n    label: 'AC Total Hours',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'totalCycles',\n    label: 'AC Total Cycles',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'squawkSource',\n    label: 'Squawk Source',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'ATA',\n    label: 'ATA',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'station',\n    label: 'Station',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'ATA_SUB',\n    label: 'ATA SUB',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }, {\n    name: 'ATA_Main',\n    label: 'ATA Main',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({\n        style: {\n          whiteSpace: 'nowrap'\n        }\n      })\n    }\n  }];\n  let responseData = [];\n  data.map(item => {\n    responseData.push({\n      p_id: item[\"p_id\"],\n      operator: item[\"Operator\"],\n      model: item[\"Model\"],\n      type: item[\"Type\"],\n      serialNo: item[\"Serial_No\"],\n      date: DateConverter(item[\"date\"]),\n      failureFlag: item[\"Failure Flag\"],\n      maintTrans: item[\"Maint Trans\"],\n      maintCanc: item[\"Maintenance Cancellations\"],\n      maintDel: item[\"Maintenance Delays\"],\n      inspection: item[\"Inspection\"],\n      campType: item[\"CampType\"],\n      MRB: item[\"MRB\"],\n      discrepancy: item[\"Discrepancy\"],\n      corActions: item[\"Corrective Action\"],\n      totalHours: item[\"AC Total Hours\"],\n      totalCycles: item[\"AC Total Cycles\"],\n      squawkSource: item[\"Squawk Source\"],\n      ATA: item[\"ATA\"],\n      station: item[\"Station\"],\n      ATA_SUB: item[\"ATA_SUB\"],\n      ATA_Main: item[\"ATA_Main\"]\n    });\n    return responseData;\n  });\n  const options = {\n    filter: true,\n    filterType: 'multiselect',\n    responsive: \"standard\",\n    fixedHeader: true,\n    expandableRows: true,\n    renderExpandableRow: (rowData, rowMeta) => {\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          colSpan: rowData.length + 1,\n          children: [/*#__PURE__*/_jsxDEV(CorrelationSubTable, {\n            p_id: rowData[0],\n            dateFrom: dateFrom,\n            dateTo: dateTo,\n            EqID: EqID,\n            ATAMain: ATAMain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 17\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 22\n      }, this);\n    },\n    textLabels: {\n      body: {\n        noMatch: loading ? 'Please wait, loading data ...' : \"Sorry, there is no matching data to display\"\n      }\n    },\n    fixedSelectColumn: true,\n    downloadOptions: {\n      filename: 'PM Report from ' + dateFrom + ' to ' + dateTo + '.csv',\n      separator: ','\n    },\n    draggableColumns: {\n      enabled: false,\n      transitionTime: 300\n    },\n    elevation: 4,\n    rowsPerPage: 20,\n    rowsPerPageOptions: [20, 50],\n    selectToolbarPlacement: \"none\"\n  };\n  const theme = createMuiTheme({\n    palette: {\n      type: 'light'\n    },\n    typography: {\n      useNextVariants: true\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.card,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Correlation Filters \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.Grid,\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: [/*#__PURE__*/_jsxDEV(ATAMainSelector, {\n              handleATAChange: handleATAChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 9\n            }, this), \"               \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 9\n          }, this), \"      \", /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: [/*#__PURE__*/_jsxDEV(EqIDSelector, {\n              handleEqIDChange: handleEqIDChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 9\n            }, this), \"                    \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 21\n          }, this), \"     \", /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"From\",\n              handleDateFrom: handleDateFrom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 9\n            }, this), \"    \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 20\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"To\",\n              handleDateTo: handleDateTo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 9\n            }, this), \"    \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: async () => handleGeneratePMTable(),\n              className: classes.button,\n              children: \"Generate Correlation Table \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 9\n            }, this), \"   \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 16\n          }, this), \"      \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 9\n        }, this), \"       \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 15\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }, this), \" \", data !== \"\" && data !== \"undefined\" && PMValue === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.TableGrid,\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n            theme: theme,\n            children: [/*#__PURE__*/_jsxDEV(MUIDataTable, {\n              title: \"PM Report\",\n              data: responseData,\n              columns: columns,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 17\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 17\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this), \"  \"]\n    }, void 0, true), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 414,\n    columnNumber: 14\n  }, this);\n};\n\n_s(PMTable, \"sP/NMbjf5TTotPaF3Sh1feDpCQo=\", false, function () {\n  return [useStyles];\n});\n\n_c = PMTable;\nexport default PMTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PMTable\");","map":{"version":3,"sources":["/Users/kanu/Desktop/MHIRJTEST/mhirjWeb/src/Components/Correlation/PMTable.js"],"names":["React","useState","useEffect","MUIDataTable","MuiThemeProvider","createMuiTheme","Grid","makeStyles","axios","DatePicker","ATAMainSelector","EqIDSelector","Button","Paper","TableCell","TableRow","CorrelationSubTable","DateConverter","useStyles","theme","root","flexGrow","form","margin","spacing","paper","width","container","padding","button","height","backgroundColor","paddingLeft","card","textAlign","justify","formLabel","fontWeight","color","marginBottom","TableGrid","PMTable","props","classes","dateFrom","setDateFrom","dateTo","setDateTo","ATAMain","setATAMain","EqID","setEqID","data","setData","loading","setLoading","PMValue","setPMValue","handleDateFrom","date","handleDateTo","handleATAChange","ATA","handleEqIDChange","eqIDList","PMConditions","setPMConditions","handleGeneratePMTable","flag","Object","values","map","item","path","post","then","res","JSON","parse","catch","err","console","log","columns","name","label","options","filter","filterType","sort","setCellProps","style","whiteSpace","minWidth","responseData","push","p_id","operator","model","type","serialNo","failureFlag","maintTrans","maintCanc","maintDel","inspection","campType","MRB","discrepancy","corActions","totalHours","totalCycles","squawkSource","station","ATA_SUB","ATA_Main","responsive","fixedHeader","expandableRows","renderExpandableRow","rowData","rowMeta","length","textLabels","body","noMatch","fixedSelectColumn","downloadOptions","filename","separator","draggableColumns","enabled","transitionTime","elevation","rowsPerPage","rowsPerPageOptions","selectToolbarPlacement","palette","typography","useNextVariants"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport DatePicker from '../MdcMessages/GenerateReport/DatePicker';\nimport { ATAMainSelector, EqIDSelector } from '../MdcMessages/GenerateReport/Selectors';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport CorrelationSubTable from './CorrelationSubTable';\n//Date Imports\nimport { DateConverter } from '../Helper/Helper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    form: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        },\n    },\n    paper: {\n        margin: '20px auto 23px 20px',\n        width: '92vw',\n    },\n    container: {\n        padding: '20px 40px',\n    },\n    button: {\n        height: '50px',\n        width: '100%',\n        backgroundColor: \"#C5D3E0\",\n    },\n    Grid: {\n        paddingLeft: '30px',\n        margin: 'auto',\n    },\n    card: {\n        backgroundColor: \"#C5D3E0\",\n        textAlign: 'center',\n        justify: 'center',\n        padding: '5px',\n    },\n    formLabel: {\n        fontWeight: 'bold',\n        color: 'black',\n        marginBottom: '20px',\n    },\n    TableGrid: {\n        paddingLeft: '11px',\n        margin: '0px',\n        width: '94vw',\n    }\n}));\n\nconst PMTable = (props) => {\n    const classes = useStyles();\n    const [dateFrom, setDateFrom] = useState();\n    const [dateTo, setDateTo] = useState();\n    const [ATAMain, setATAMain] = useState();\n    const [EqID, setEqID] = useState('');\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [PMValue, setPMValue] = useState(0);\n\n    const handleDateFrom = (date) => {\n        setDateFrom(date);\n    };\n\n    const handleDateTo = (date) => {\n        setDateTo(date);\n    };\n    const handleATAChange = (ATA) => {\n        setATAMain(ATA);\n    };\n    const handleEqIDChange = (eqIDList) => {\n        setEqID(eqIDList);\n    };\n\n    const [PMConditions, setPMConditions] = useState('');\n    const handleGeneratePMTable = () => {\n        setPMConditions({\n            dateFrom: dateFrom,\n            dateTo: dateTo,\n            EqID: EqID,\n            ATAMain: ATAMain,\n        }, )\n        setData([]);\n        setPMValue(1);\n        setLoading(true);\n    }\n\n    useEffect(() => {\n        let flag = false;\n        Object.values(PMConditions).map(item => {\n            if (item === \"\" || item === \"('')\") {\n                flag = true;\n                setLoading(false);\n            }\n        });\n        if (flag === false) {\n            const path = 'https://mhirjapi.azurewebsites.net/api/corelation/' + PMConditions.dateFrom + '/' + PMConditions.dateTo + '/' + PMConditions.EqID + '/' + PMConditions.ATAMain;\n            axios.post(path).then(function(res) {\n                var data = JSON.parse(res.data);\n                setData(data);\n                setLoading(false);\n            }).catch(function(err) {\n                console.log(err);\n                setLoading(false);\n            })\n        }\n    }, [PMConditions]);\n\n    const columns = [{\n            name: \"p_id\",\n            label: \"p_id\",\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'operator',\n            label: 'Operator',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'model',\n            label: 'Model',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap', minWidth: \"90px\" } })\n            }\n        },\n        {\n            name: 'type',\n            label: 'Type',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'serialNo',\n            label: 'Serial_No',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'date',\n            label: 'Date',\n            options: {\n                filter: false,\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'failureFlag',\n            label: 'Failure Flag',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'maintTrans',\n            label: 'MaintTrans',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'maintCanc',\n            label: 'Maintenance Cancellations',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'maintDel',\n            label: 'Maintenance Delays',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap', minWidth: \"120px\" } })\n            }\n        },\n        {\n            name: 'inspection',\n            label: 'Inspection',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'campType',\n            label: 'Camp Type',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'MRB',\n            label: 'MRB',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap', minWidth: \"100px\" } })\n            }\n        },\n        {\n            name: 'discrepancy',\n            label: 'Discrepancy',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'corActions',\n            label: 'Corrective Action',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'totalHours',\n            label: 'AC Total Hours',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'totalCycles',\n            label: 'AC Total Cycles',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'squawkSource',\n            label: 'Squawk Source',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'ATA',\n            label: 'ATA',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'station',\n            label: 'Station',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'ATA_SUB',\n            label: 'ATA SUB',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n        {\n            name: 'ATA_Main',\n            label: 'ATA Main',\n            options: {\n                filter: true,\n                filterType: 'dropdown',\n                sort: true,\n                setCellProps: () => ({ style: { whiteSpace: 'nowrap' } })\n            }\n        },\n    ];\n    let responseData = [];\n    data.map((item => {\n        responseData.push({\n            p_id: item[\"p_id\"],\n            operator: item[\"Operator\"],\n            model: item[\"Model\"],\n            type: item[\"Type\"],\n            serialNo: item[\"Serial_No\"],\n            date: DateConverter(item[\"date\"]),\n            failureFlag: item[\"Failure Flag\"],\n            maintTrans: item[\"Maint Trans\"],\n            maintCanc: item[\"Maintenance Cancellations\"],\n            maintDel: item[\"Maintenance Delays\"],\n            inspection: item[\"Inspection\"],\n            campType: item[\"CampType\"],\n            MRB: item[\"MRB\"],\n            discrepancy: item[\"Discrepancy\"],\n            corActions: item[\"Corrective Action\"],\n            totalHours: item[\"AC Total Hours\"],\n            totalCycles: item[\"AC Total Cycles\"],\n            squawkSource: item[\"Squawk Source\"],\n            ATA: item[\"ATA\"],\n            station: item[\"Station\"],\n            ATA_SUB: item[\"ATA_SUB\"],\n            ATA_Main: item[\"ATA_Main\"],\n        });\n        return responseData\n    }));\n\n    const options = {\n        filter: true,\n        filterType: 'multiselect',\n        responsive: \"standard\",\n        fixedHeader: true,\n        expandableRows: true,\n        renderExpandableRow: (rowData, rowMeta) => {\n            return ( <\n                TableRow >\n                <\n                TableCell colSpan = { rowData.length + 1 } >\n                <\n                CorrelationSubTable p_id = { rowData[0] }\n                dateFrom = { dateFrom }\n                dateTo = { dateTo }\n                EqID = { EqID }\n                ATAMain = { ATAMain }\n                /> <\n                /TableCell> <\n                /TableRow>\n            );\n        },\n        textLabels: {\n            body: {\n                noMatch: loading ? 'Please wait, loading data ...' : \"Sorry, there is no matching data to display\"\n            },\n        },\n        fixedSelectColumn: true,\n        downloadOptions: {\n            filename: 'PM Report from ' + dateFrom + ' to ' + dateTo + '.csv',\n            separator: ',',\n        },\n        draggableColumns: {\n            enabled: false,\n            transitionTime: 300,\n        },\n        elevation: 4,\n        rowsPerPage: 20,\n        rowsPerPageOptions: [20, 50],\n        selectToolbarPlacement: \"none\",\n    };\n\n    const theme = createMuiTheme({\n        palette: { type: 'light' },\n        typography: { useNextVariants: true },\n    });\n\n    return ( <\n        div className = { classes.root } >\n        <\n        Paper className = { classes.paper } >\n        <\n        div className = { classes.card } >\n        <\n        h2 > Correlation Filters < /h2> <\n        /div> <\n        div className = { classes.container } >\n        <\n        Grid className = { classes.Grid }\n        container spacing = { 3 } >\n        <\n        Grid item xs = { 3 } >\n        <\n        ATAMainSelector handleATAChange = { handleATAChange }\n        />               <\n        /Grid>      <\n        Grid item xs = { 3 } >\n        <\n        EqIDSelector handleEqIDChange = { handleEqIDChange }\n        />                    <\n        /Grid>     <\n        Grid item xs = { 2 } >\n        <\n        DatePicker label = \"From\"\n        handleDateFrom = { handleDateFrom }\n        />    <\n        /Grid> <\n        Grid item xs = { 2 } >\n        <\n        DatePicker label = \"To\"\n        handleDateTo = { handleDateTo }\n        />    <\n        /Grid> <\n        Grid item xs = { 2 } >\n        <\n        Button variant = \"contained\"\n        onClick = { async() => handleGeneratePMTable() }\n        className = { classes.button } >\n        Generate Correlation Table <\n        /Button>   <\n        /Grid>      <\n        /Grid>       <\n        /div> <\n        /Paper> {\n            data !== \"\" && data !== \"undefined\" && PMValue === 1 &&\n                <\n                >\n                <\n                Grid className = { classes.TableGrid }\n            container spacing = { 3 } >\n                <\n                Grid item xs = { 12 } >\n                <\n                MuiThemeProvider theme = { theme } >\n                <\n                MUIDataTable\n            title = \"PM Report\"\n            data = { responseData }\n            columns = { columns }\n            options = { options }\n            /> <\n            /MuiThemeProvider>  <\n            /Grid>  <\n            /Grid>  <\n            />\n        } <\n        /div>\n    );\n}\n\nexport default PMTable;"]},"metadata":{},"sourceType":"module"}