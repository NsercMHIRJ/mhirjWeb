{"ast":null,"code":"var _jsxFileName = \"/Users/kanu/Desktop/MHIRJTEST/mhirjWeb/src/Components/Scatter1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Scatter } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(120)\n  }\n}));\nexport default function Scatter1() {\n  _s();\n\n  const classes = useStyles();\n\n  const ChartJsImage = require('chartjs-to-image');\n\n  const [chartData1, setChartData1] = useState({});\n  const [chartData2, setChartData2] = useState({});\n  let aircraftno_scatter = [];\n  let mdcMessage = [];\n\n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart1');\n    canvasSave.toBlob(function (blob) {\n      saveAs(blob, \"Chart1.png\");\n    });\n  }\n\n  const [data_chart1, setData_chart1] = useState({\n    from_date: \"\",\n    to_date: \"\"\n  });\n\n  function submit(e) {\n    e.preventDefault();\n    const path = 'https://mhirjapi.azurewebsites.net/api/scatter_chart_MDC_PM/' + data_chart1.from_date + '/' + data_chart1.to_date; //const path = 'http://40.82.160.131/api/scatter_chart_MDC_PM/' + data_chart1.select_date;\n    //console.log(path);\n\n    axios.post(path).then(res => {\n      for (const dataObj of JSON.parse(res.data)) {\n        let mdc = parseInt(dataObj.MDC_Message_Cnt);\n        let pm = parseInt(dataObj.MX_actions);\n        aircraftno_scatter.push(dataObj.aircraftno);\n        mdcMessage.push({\n          \"x\": mdc,\n          \"y\": pm\n        });\n      }\n\n      console.log(mdcMessage);\n      setChartData1({\n        labels: aircraftno_scatter,\n        datasets: [{\n          label: \"Fleet Status\",\n          data: mdcMessage,\n          backgroundColor: \"#d8e4f0\",\n          borderWidth: 2,\n          borderColor: \"black\",\n          pointRadius: 5\n        }]\n      });\n    }).catch(err => {//console.log(err);\n    });\n  }\n\n  function handle(e) {\n    const newdata = { ...data_chart1\n    };\n    newdata[e.target.id] = e.target.value;\n    setData_chart1(newdata); //console.log(newdata)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 12,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root1,\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                color: \"#001C3E\",\n                textAlign: \"center\"\n              },\n              children: \" FLEET STATUS \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => handle(e),\n              id: \"from_date\",\n              value: data_chart1.from_date,\n              label: \" SELECT FROM DATE \\xA0 \\xA0\",\n              type: \"date\",\n              defaultValue: \" \",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => handle(e),\n              id: \"to_date\",\n              value: data_chart1.to_date,\n              label: \" SELECT TO DATE \",\n              type: \"date\",\n              defaultValue: \" \",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 9\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingBottom: \"20px\"\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n              id: \"Button\",\n              onClick: e => submit(e),\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\"\n              },\n              children: \" GENERATE \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 43\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => save(e),\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\",\n                float: 'right',\n                marginRight: \"1200px\"\n              },\n              children: \" SAVE \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 84\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Scatter, {\n            id: \"chart1\",\n            data: chartData1,\n            options: {\n              legend: {\n                display: false\n              },\n              tooltips: {\n                displayColors: false,\n                backgroundColor: 'black',\n                titleFontColor: 'rgb(255,255,255)',\n                bodyFontColor: 'rgb(255,255,255)',\n                footerFontColor: 'rgb(255,255,255)',\n                footerFontStyle: 'normal',\n                callbacks: {\n                  title: function (item, everything) {\n                    return;\n                  },\n                  label: function (item, everything) {\n                    console.log(item, everything);\n                    let ind = item.index;\n                    let aircraft_name = everything.labels[ind];\n                    return \"Aircraft: \" + aircraft_name;\n                  },\n                  footer: function (item, everything) {\n                    console.log(item, everything);\n                    let xvalue = item[0].xLabel;\n                    let yvalue = item[0].yLabel;\n                    return \"x =\" + xvalue + ',' + \" y = \" + yvalue;\n                  }\n                }\n              },\n              scales: {\n                xAxes: [{\n                  type: 'linear',\n                  position: 'bottom',\n                  scaleLabel: {\n                    display: true,\n                    labelString: '# of MDC Messages- Last 7 days',\n                    fontStyle: 'bold',\n                    fontColor: '#001C3E'\n                  }\n                }],\n                yAxes: [{\n                  display: true,\n                  scaleLabel: {\n                    display: true,\n                    labelString: '# of log-book entries',\n                    fontStyle: 'bold',\n                    fontColor: '#001C3E'\n                  }\n                }],\n                title: {\n                  display: true,\n                  text: 'Scatter Plot',\n                  fontSize: 20\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 9\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Scatter1, \"YvIigO8jCG4Op7zbOK3FiD68918=\", false, function () {\n  return [useStyles];\n});\n\n_c = Scatter1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scatter1\");","map":{"version":3,"sources":["/Users/kanu/Desktop/MHIRJTEST/mhirjWeb/src/Components/Scatter1.js"],"names":["React","useState","useEffect","makeStyles","Paper","Grid","Scatter","TextField","Button","saveAs","axios","useStyles","theme","root","flexGrow","marginLeft","marginTop","paper","padding","spacing","textAlign","color","palette","text","secondary","width","height","Scatter1","classes","ChartJsImage","require","chartData1","setChartData1","chartData2","setChartData2","aircraftno_scatter","mdcMessage","save","e","canvasSave","document","getElementById","toBlob","blob","data_chart1","setData_chart1","from_date","to_date","submit","preventDefault","path","post","then","res","dataObj","JSON","parse","data","mdc","parseInt","MDC_Message_Cnt","pm","MX_actions","push","aircraftno","console","log","labels","datasets","label","backgroundColor","borderWidth","borderColor","pointRadius","catch","err","handle","newdata","target","id","value","root1","textField","shrink","paddingBottom","float","marginRight","legend","display","tooltips","displayColors","titleFontColor","bodyFontColor","footerFontColor","footerFontStyle","callbacks","title","item","everything","ind","index","aircraft_name","footer","xvalue","xLabel","yvalue","yLabel","scales","xAxes","type","position","scaleLabel","labelString","fontStyle","fontColor","yAxes","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Scatter } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginLeft: '25px',\n        marginTop: '25px',\n    },\n\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        width: theme.spacing(185),\n        height: theme.spacing(120),\n    },\n\n}));\n\n\nexport default function Scatter1() {\n    const classes = useStyles();\n    const ChartJsImage = require('chartjs-to-image');\n    const [chartData1, setChartData1] = useState({});\n    const [chartData2, setChartData2] = useState({});\n    let aircraftno_scatter = [];\n    let mdcMessage = [];\n\n    function save(e) {\n        //save to png\n        const canvasSave = document.getElementById('chart1');\n        canvasSave.toBlob(function(blob) {\n            saveAs(blob, \"Chart1.png\")\n        })\n    }\n\n    const [data_chart1, setData_chart1] = useState({\n        from_date: \"\",\n        to_date: \"\"\n    });\n\n    function submit(e) {\n        e.preventDefault();\n\n        const path = 'https://mhirjapi.azurewebsites.net/api/scatter_chart_MDC_PM/' + data_chart1.from_date + '/' + data_chart1.to_date;\n        //const path = 'http://40.82.160.131/api/scatter_chart_MDC_PM/' + data_chart1.select_date;\n\n\n        //console.log(path);\n        axios.post(path)\n            .then(res => {\n                for (const dataObj of JSON.parse(res.data)) {\n                    let mdc = parseInt(dataObj.MDC_Message_Cnt)\n                    let pm = parseInt(dataObj.MX_actions)\n                    aircraftno_scatter.push(dataObj.aircraftno)\n                    mdcMessage.push({ \"x\": mdc, \"y\": pm })\n\n                }\n                console.log(mdcMessage);\n                setChartData1({\n                    labels: aircraftno_scatter,\n                    datasets: [{\n                        label: \"Fleet Status\",\n                        data: mdcMessage,\n                        backgroundColor: \"#d8e4f0\",\n                        borderWidth: 2,\n                        borderColor: \"black\",\n                        pointRadius: 5\n\n                    }]\n                });\n            })\n            .catch(err => {\n                //console.log(err);\n            });\n\n    }\n\n    function handle(e) {\n        const newdata = {...data_chart1 }\n        newdata[e.target.id] = e.target.value\n        setData_chart1(newdata)\n            //console.log(newdata)\n\n    }\n    return (\n\n        <\n        div className = { classes.root } >\n        <\n        Grid container spacing = { 12 } >\n        <\n        Grid item xs = { 12 } >\n        <\n        form className = { classes.root1 }\n        noValidate autoComplete = \"off\" >\n\n        <\n        div > < h2 style = {\n            { color: \"#001C3E\", textAlign: \"center\" } } > FLEET STATUS < /h2></div >\n        <\n        div > < TextField onChange = {\n            (e) => handle(e) }\n        id = \"from_date\"\n        value = { data_chart1.from_date }\n        label = \" SELECT FROM DATE &nbsp; &nbsp;\"\n        type = \"date\"\n        defaultValue = \" \"\n        className = { classes.textField }\n        InputLabelProps = {\n            { shrink: true, } }\n        /> <\n        TextField onChange = {\n            (e) => handle(e) }\n        id = \"to_date\"\n        value = { data_chart1.to_date }\n        label = \" SELECT TO DATE \"\n        type = \"date\"\n        defaultValue = \" \"\n        className = { classes.textField }\n        InputLabelProps = {\n            { shrink: true, } }\n        /></div >\n        <\n        br > < /br> <\n        div style = {\n            { paddingBottom: \"20px\" } } > < Button id = \"Button\"\n        onClick = {\n            (e) => submit(e) }\n        variant = \"contained\"\n        style = {\n            { backgroundColor: \"#001C3E\", color: \"WHITE\" } } > GENERATE < /Button> <\n        Button onClick = {\n            (e) => save(e) }\n        variant = \"contained\"\n        style = {\n            { backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" } } > SAVE < /Button></div >\n        <\n        /form>\n\n        <\n        Paper className = { classes.paper } >\n        <\n        Scatter id = \"chart1\"\n        data = { chartData1 }\n        options = {\n            {\n                legend: { display: false },\n                tooltips: {\n\n                    displayColors: false,\n                    backgroundColor: 'black',\n                    titleFontColor: 'rgb(255,255,255)',\n                    bodyFontColor: 'rgb(255,255,255)',\n                    footerFontColor: 'rgb(255,255,255)',\n                    footerFontStyle: 'normal',\n\n                    callbacks: {\n                        title: function(item, everything) {\n                            return;\n                        },\n                        label: function(item, everything) {\n                            console.log(item, everything);\n                            let ind = item.index;\n                            let aircraft_name = everything.labels[ind];\n                            return \"Aircraft: \" + aircraft_name;\n                        },\n\n                        footer: function(item, everything) {\n                            console.log(item, everything);\n                            let xvalue = item[0].xLabel;\n                            let yvalue = item[0].yLabel;\n                            return \"x =\" + xvalue + ',' + \" y = \" + yvalue;\n\n                        }\n                    }\n                },\n                scales: {\n                    xAxes: [{\n                        type: 'linear',\n                        position: 'bottom',\n                        scaleLabel: {\n                            display: true,\n                            labelString: '# of MDC Messages- Last 7 days',\n                            fontStyle: 'bold',\n                            fontColor: '#001C3E'\n\n                        },\n                    }],\n                    yAxes: [{\n                        display: true,\n                        scaleLabel: {\n                            display: true,\n                            labelString: '# of log-book entries',\n                            fontStyle: 'bold',\n                            fontColor: '#001C3E'\n                        }\n                    }],\n                    title: { display: true, text: 'Scatter Plot', fontSize: 20 },\n\n                }\n            }\n        }\n        /> <\n        /Paper> <\n        /Grid> <\n        /Grid> <\n        /div>\n    );\n}"]},"metadata":{},"sourceType":"module"}