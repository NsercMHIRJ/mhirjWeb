{"ast":null,"code":"var _jsxFileName = \"/Users/kanu/Desktop/MHIRJTEST/mhirjWeb/src/Components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Scatter, HorizontalBar, Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(120)\n  }\n}));\nexport default function Chart1() {\n  _s();\n\n  const classes = useStyles();\n\n  const ChartJsImage = require('chartjs-to-image');\n\n  const [chartData1, setChartData1] = useState({});\n  const [chartData2, setChartData2] = useState({});\n  let pmMessage = [];\n  let aircraftno_scatter = [];\n  useEffect(() => {\n    const path = 'https://mhirjapi.azurewebsites.net/api/Landing_Chart_B'; // const path = 'http://40.82.160.131/api/Landing_Chart_B'\n\n    axios.post(path).then(res => {\n      let data = JSON.parse(res.data);\n      let aircraftNos = Object.keys(data);\n      let dataMetaData = {};\n      aircraftNos.map(no => {\n        let airCraftObj = data[no];\n\n        for (let x in airCraftObj) {\n          if (dataMetaData[x]) dataMetaData[x].push(airCraftObj[x]);else dataMetaData[x] = [airCraftObj[x]];\n        }\n      });\n\n      const getUniqueBackgroundColor = code => {\n        switch (code) {\n          case '21':\n            return \"#ef5350\";\n\n          case '22':\n            return \"#ec407a\";\n\n          case '23':\n            return \"#ab47bc\";\n\n          case '24':\n            return \"#7e57c2\";\n\n          case '26':\n            return \"#5c6bc0\";\n\n          case '27':\n            return \"#42a5f5\";\n\n          case '28':\n            return \"#29b6f6\";\n\n          case '30':\n            return \"#26c6da\";\n\n          case '31':\n            return \"#26a69a\";\n\n          case '32':\n            return \"#66bb6a\";\n\n          case '33':\n            return \"#9ccc65\";\n\n          case '34':\n            return \"#d4e157\";\n\n          case '36':\n            return \"#ffee58\";\n\n          case '38':\n            return \"#ffca28\";\n\n          case '45':\n            return \"#ffa726\";\n\n          case '49':\n            return \"#8d6e63\";\n\n          case '71':\n            return \"#bdbdbd\";\n\n          case '77':\n            return \"#9e9d24\";\n\n          case '78':\n            return \"#ff7043\";\n        }\n      };\n\n      const intiDataSet = dataMetaData => {\n        let codes = Object.keys(dataMetaData);\n        let finalDataset = [];\n        codes.map(code => {\n          let dataObj = {};\n          dataObj.label = code;\n          dataObj.data = dataMetaData[code];\n          dataObj.backgroundColor = getUniqueBackgroundColor(code);\n          finalDataset.push(dataObj);\n          dataObj.borderWidth = 0.5;\n          dataObj.borderColor = \"black\";\n        });\n        return finalDataset;\n      }; // console.log(\"aircraftNos=\",aircraftNos);\n\n\n      setChartData1({\n        labels: aircraftNos,\n        datasets: intiDataSet(dataMetaData)\n      });\n    }).catch(err => {//console.log(err);\n    }); //  console.log(aircraftno);\n    //  console.log(ata_main);\n    //  console.log(msg);\n\n    const path1 = 'https://mhirjapi.azurewebsites.net/api/scatter_chart_MDC_PM'; //const path1 = 'http://40.82.160.131/api/scatter_chart_MDC_PM'\n\n    axios.post(path1).then(res => {\n      //console.log(res,\"response\");\n      for (const dataObj of JSON.parse(res.data)) {\n        let mdc = parseInt(dataObj.MDC_Message_Cnt);\n        let pm = parseInt(dataObj.MX_actions);\n        aircraftno_scatter.push(dataObj.aircraftno);\n        pmMessage.push({\n          \"x\": mdc,\n          \"y\": pm\n        });\n      } // const getUniqueBackgroundColorScatter = (pmMessage) => {\n      //   switch(pmMessage){\n      //     case ((pmMessage.x >= 0 && pmMessage.x <= 400) ||  (pmMessage.y >=0 && pmMessage.y <= 40)) :\n      //       return \"#ef5350\";\n      //   }\n      // }\n\n\n      const intiDataSet_Scatter = pmMessage => {\n        let finalDatasetScatter = [];\n        let dataObjScatter = {}; //dataObjScatter.label = \"\";\n\n        dataObjScatter.data = pmMessage;\n        dataObjScatter.backgroundColor = \"#d8e4f0\";\n        dataObjScatter.borderWidth = '2';\n        dataObjScatter.borderColor = \"black\";\n        dataObjScatter.pointRadius = '6';\n        finalDatasetScatter.push(dataObjScatter);\n        return finalDatasetScatter;\n      };\n\n      setChartData2({\n        labels: aircraftno_scatter,\n        datasets: intiDataSet_Scatter(pmMessage)\n      });\n    }).catch(err => {//console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 12,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.root1,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  color: \"#001C3E\",\n                  textAlign: \"center\"\n                },\n                children: \" FLEET STATUS FOR LAST 7 DAYS \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 9\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Scatter, {\n            id: \"chart1\",\n            data: chartData2,\n            options: {\n              legend: {\n                display: false\n              },\n              tooltips: {\n                displayColors: false,\n                backgroundColor: 'black',\n                titleFontColor: 'rgb(255,255,255)',\n                bodyFontColor: 'rgb(255,255,255)',\n                footerFontColor: 'rgb(255,255,255)',\n                footerFontStyle: 'normal',\n                callbacks: {\n                  title: function (item, everything) {\n                    return;\n                  },\n                  label: function (item, everything) {\n                    console.log(item, everything);\n                    let ind = item.index;\n                    let aircraft_name = everything.labels[ind];\n                    return \"Aircraft: \" + aircraft_name;\n                  },\n                  footer: function (item, everything) {\n                    console.log(item, everything);\n                    let xvalue = item[0].xLabel;\n                    let yvalue = item[0].yLabel;\n                    return \"x =\" + xvalue + ',' + \" y = \" + yvalue;\n                  }\n                }\n              },\n              scales: {\n                xAxes: [{\n                  type: 'linear',\n                  scaleLabel: {\n                    display: true,\n                    labelString: '# of MDC Messages- Last 7 days',\n                    fontStyle: 'bold',\n                    fontColor: '#001C3E'\n                  },\n                  position: 'bottom'\n                }],\n                yAxes: [{\n                  display: true,\n                  scaleLabel: {\n                    display: true,\n                    labelString: '# of log-book entries',\n                    fontStyle: 'bold',\n                    fontColor: '#001C3E'\n                  }\n                }],\n                title: {\n                  display: false,\n                  text: 'Scatter Plot',\n                  fontSize: 20\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 16\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.root1,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  color: \"#001C3E\",\n                  textAlign: \"center\"\n                },\n                children: \" MAGNITUDE OF MESSAGES IN DATA \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 9\n          }, this), \" \", /*#__PURE__*/_jsxDEV(HorizontalBar, {\n            data: chartData1,\n            options: {\n              legend: {\n                display: true,\n                position: 'right'\n              },\n              scales: {\n                xAxes: [{\n                  stacked: true\n                }],\n                yAxes: [{\n                  barPercentage: 0.5,\n                  scaleLabel: {\n                    display: true,\n                    labelString: 'Aircraft Serial Number',\n                    fontStyle: 'bold',\n                    fontColor: '#001C3E'\n                  },\n                  stacked: true\n                }]\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart1, \"o/jcUSbwayGVlABWN372fduIGto=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chart1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart1\");","map":{"version":3,"sources":["/Users/kanu/Desktop/MHIRJTEST/mhirjWeb/src/Components/Home.js"],"names":["React","useState","useEffect","makeStyles","Paper","Grid","Scatter","HorizontalBar","Bar","axios","useStyles","theme","root","flexGrow","marginLeft","marginTop","paper","padding","spacing","textAlign","color","palette","text","secondary","width","height","Chart1","classes","ChartJsImage","require","chartData1","setChartData1","chartData2","setChartData2","pmMessage","aircraftno_scatter","path","post","then","res","data","JSON","parse","aircraftNos","Object","keys","dataMetaData","map","no","airCraftObj","x","push","getUniqueBackgroundColor","code","intiDataSet","codes","finalDataset","dataObj","label","backgroundColor","borderWidth","borderColor","labels","datasets","catch","err","path1","mdc","parseInt","MDC_Message_Cnt","pm","MX_actions","aircraftno","intiDataSet_Scatter","finalDatasetScatter","dataObjScatter","pointRadius","root1","legend","display","tooltips","displayColors","titleFontColor","bodyFontColor","footerFontColor","footerFontStyle","callbacks","title","item","everything","console","log","ind","index","aircraft_name","footer","xvalue","xLabel","yvalue","yLabel","scales","xAxes","type","scaleLabel","labelString","fontStyle","fontColor","position","yAxes","fontSize","stacked","barPercentage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Scatter, HorizontalBar, Bar } from 'react-chartjs-2';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginLeft: '25px',\n        marginTop: '25px',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        width: theme.spacing(185),\n        height: theme.spacing(120),\n    },\n}));\n\n\nexport default function Chart1() {\n\n    const classes = useStyles();\n    const ChartJsImage = require('chartjs-to-image');\n    const [chartData1, setChartData1] = useState({});\n    const [chartData2, setChartData2] = useState({});\n\n    let pmMessage = [];\n    let aircraftno_scatter = [];\n\n    useEffect(() => {\n        const path = 'https://mhirjapi.azurewebsites.net/api/Landing_Chart_B'\n            // const path = 'http://40.82.160.131/api/Landing_Chart_B'\n\n\n        axios.post(path)\n            .then(res => {\n                let data = JSON.parse(res.data);\n                let aircraftNos = Object.keys(data);\n                let dataMetaData = {};\n                aircraftNos.map(no => {\n                    let airCraftObj = data[no];\n                    for (let x in airCraftObj) {\n                        if (dataMetaData[x]) dataMetaData[x].push(airCraftObj[x]);\n                        else dataMetaData[x] = [airCraftObj[x]];\n                    }\n                })\n\n\n                const getUniqueBackgroundColor = (code) => {\n                    switch (code) {\n                        case '21':\n                            return \"#ef5350\";\n                        case '22':\n                            return \"#ec407a\";\n                        case '23':\n                            return \"#ab47bc\";\n                        case '24':\n                            return \"#7e57c2\";\n                        case '26':\n                            return \"#5c6bc0\";\n                        case '27':\n                            return \"#42a5f5\";\n                        case '28':\n                            return \"#29b6f6\";\n                        case '30':\n                            return \"#26c6da\";\n                        case '31':\n                            return \"#26a69a\";\n                        case '32':\n                            return \"#66bb6a\";\n                        case '33':\n                            return \"#9ccc65\";\n                        case '34':\n                            return \"#d4e157\";\n                        case '36':\n                            return \"#ffee58\";\n                        case '38':\n                            return \"#ffca28\";\n                        case '45':\n                            return \"#ffa726\";\n                        case '49':\n                            return \"#8d6e63\";\n                        case '71':\n                            return \"#bdbdbd\";\n                        case '77':\n                            return \"#9e9d24\";\n                        case '78':\n                            return \"#ff7043\";\n                    }\n                }\n\n                const intiDataSet = (dataMetaData) => {\n                        let codes = Object.keys(dataMetaData);\n                        let finalDataset = [];\n                        codes.map(code => {\n                            let dataObj = {};\n                            dataObj.label = code;\n                            dataObj.data = dataMetaData[code];\n                            dataObj.backgroundColor = getUniqueBackgroundColor(code);\n                            finalDataset.push(dataObj);\n                            dataObj.borderWidth = 0.5;\n                            dataObj.borderColor = \"black\";\n                        });\n                        return finalDataset;\n                    }\n                    // console.log(\"aircraftNos=\",aircraftNos);\n                setChartData1({\n                    labels: aircraftNos,\n                    datasets: intiDataSet(dataMetaData)\n\n                });\n\n            })\n            .catch(err => {\n                //console.log(err);\n            });\n\n        //  console.log(aircraftno);\n        //  console.log(ata_main);\n        //  console.log(msg);\n\n\n        const path1 = 'https://mhirjapi.azurewebsites.net/api/scatter_chart_MDC_PM'\n            //const path1 = 'http://40.82.160.131/api/scatter_chart_MDC_PM'\n\n\n        axios.post(path1).then(res => {\n                //console.log(res,\"response\");\n\n                for (const dataObj of JSON.parse(res.data)) {\n                    let mdc = parseInt(dataObj.MDC_Message_Cnt)\n                    let pm = parseInt(dataObj.MX_actions)\n                    aircraftno_scatter.push(dataObj.aircraftno)\n                    pmMessage.push({ \"x\": mdc, \"y\": pm })\n\n                }\n\n\n                // const getUniqueBackgroundColorScatter = (pmMessage) => {\n                //   switch(pmMessage){\n                //     case ((pmMessage.x >= 0 && pmMessage.x <= 400) ||  (pmMessage.y >=0 && pmMessage.y <= 40)) :\n                //       return \"#ef5350\";\n                //   }\n                // }\n\n                const intiDataSet_Scatter = (pmMessage) => {\n                    let finalDatasetScatter = [];\n                    let dataObjScatter = {};\n                    //dataObjScatter.label = \"\";\n                    dataObjScatter.data = pmMessage;\n                    dataObjScatter.backgroundColor = \"#d8e4f0\";\n                    dataObjScatter.borderWidth = '2';\n                    dataObjScatter.borderColor = \"black\";\n                    dataObjScatter.pointRadius = '6';\n                    finalDatasetScatter.push(dataObjScatter);\n\n                    return finalDatasetScatter;\n                };\n\n                setChartData2({\n                    labels: aircraftno_scatter,\n                    datasets: intiDataSet_Scatter(pmMessage)\n                })\n\n\n            })\n            .catch(err => {\n                //console.log(err);\n            });\n\n    }, []);\n\n    return (\n\n        <\n        div className = { classes.root } >\n        <\n        Grid container spacing = { 12 } >\n        <\n        Grid item xs = { 12 } >\n        <\n        Paper className = { classes.paper } >\n        <\n        form className = { classes.root1 } >\n        <\n        div > < h2 style = {\n            { color: \"#001C3E\", textAlign: \"center\" } } > FLEET STATUS FOR LAST 7 DAYS < /h2></div >\n        <\n        /form> <\n        Scatter id = \"chart1\"\n        data = { chartData2 }\n        options = {\n            {\n                legend: { display: false },\n                tooltips: {\n                    displayColors: false,\n                    backgroundColor: 'black',\n                    titleFontColor: 'rgb(255,255,255)',\n                    bodyFontColor: 'rgb(255,255,255)',\n                    footerFontColor: 'rgb(255,255,255)',\n                    footerFontStyle: 'normal',\n                    callbacks: {\n                        title: function(item, everything) {\n                            return;\n                        },\n                        label: function(item, everything) {\n                            console.log(item, everything);\n                            let ind = item.index;\n                            let aircraft_name = everything.labels[ind];\n                            return \"Aircraft: \" + aircraft_name;\n                        },\n\n                        footer: function(item, everything) {\n                            console.log(item, everything);\n                            let xvalue = item[0].xLabel;\n                            let yvalue = item[0].yLabel;\n                            return \"x =\" + xvalue + ',' + \" y = \" + yvalue;\n\n                        }\n                    }\n                },\n                scales: {\n                    xAxes: [{\n                        type: 'linear',\n                        scaleLabel: {\n                            display: true,\n                            labelString: '# of MDC Messages- Last 7 days',\n                            fontStyle: 'bold',\n                            fontColor: '#001C3E'\n\n                        },\n                        position: 'bottom'\n                    }],\n                    yAxes: [{\n                        display: true,\n                        scaleLabel: {\n                            display: true,\n                            labelString: '# of log-book entries',\n                            fontStyle: 'bold',\n                            fontColor: '#001C3E'\n                        }\n                    }],\n                    title: { display: false, text: 'Scatter Plot', fontSize: 20 },\n\n                }\n            }\n        }\n        /> <\n        /Paper> <\n        Paper className = { classes.paper } >\n        <\n        form className = { classes.root1 } >\n        <\n        div > < h2 style = {\n            { color: \"#001C3E\", textAlign: \"center\" } } > MAGNITUDE OF MESSAGES IN DATA < /h2></div >\n        <\n        /form> <\n        HorizontalBar data = { chartData1 }\n        options = {\n            {\n\n                legend: {\n                    display: true,\n                    position: 'right'\n                },\n                scales: {\n                    xAxes: [{\n                        stacked: true\n                    }],\n                    yAxes: [{\n                        barPercentage: 0.5,\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Aircraft Serial Number',\n                            fontStyle: 'bold',\n                            fontColor: '#001C3E'\n                        },\n                        stacked: true\n                    }]\n                }\n            }\n        }\n        /></Paper >\n        <\n        /Grid> <\n        /Grid> <\n        /div>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}