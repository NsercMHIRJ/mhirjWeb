{"ast":null,"code":"var _jsxFileName = \"/Users/kanu/Desktop/MHIRJTEST/mhirjWeb/src/Components/Stacked.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(120)\n  }\n}));\nexport default function Stacked() {\n  _s();\n\n  const classes = useStyles();\n\n  const ChartJsImage = require('chartjs-to-image');\n\n  const [chartData1, setChartData1] = useState({});\n\n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart1');\n    canvasSave.toBlob(function (blob) {\n      saveAs(blob, \"StackedChart.png\");\n    });\n  }\n\n  const [data_chart1, setData_chart1] = useState({\n    from_date: \"\",\n    to_date: \"\",\n    top_value: \"\"\n  });\n\n  function submit(e) {\n    e.preventDefault();\n    let aircraftno = [];\n    let ata_main = [];\n    let msg = [];\n    const path = 'https://mhirjapi.azurewebsites.net/api/Landing_Chart_B/' + data_chart1.top_value + '/' + data_chart1.from_date + '/' + data_chart1.to_date;\n    axios.post(path).then(res => {\n      //console.log(res,\"response\");\n      let data = JSON.parse(res.data);\n      let aircraftNos = Object.keys(data);\n      let dataMetaData = {};\n      aircraftNos.map(no => {\n        let airCraftObj = data[no];\n\n        for (let x in airCraftObj) {\n          if (dataMetaData[x]) dataMetaData[x].push(airCraftObj[x]);else dataMetaData[x] = [airCraftObj[x]];\n        }\n      });\n\n      const getUniqueBackgroundColor = code => {\n        switch (code) {\n          case '21':\n            return \"#ef5350\";\n\n          case '22':\n            return \"#ec407a\";\n\n          case '23':\n            return \"#ab47bc\";\n\n          case '24':\n            return \"#7e57c2\";\n\n          case '26':\n            return \"#5c6bc0\";\n\n          case '27':\n            return \"#42a5f5\";\n\n          case '28':\n            return \"#29b6f6\";\n\n          case '30':\n            return \"#26c6da\";\n\n          case '31':\n            return \"#26a69a\";\n\n          case '32':\n            return \"#66bb6a\";\n\n          case '33':\n            return \"#9ccc65\";\n\n          case '34':\n            return \"#d4e157\";\n\n          case '36':\n            return \"#ffee58\";\n\n          case '38':\n            return \"#ffca28\";\n\n          case '45':\n            return \"#ffa726\";\n\n          case '49':\n            return \"#8d6e63\";\n\n          case '71':\n            return \"#bdbdbd\";\n\n          case '77':\n            return \"#9e9d24\";\n\n          case '78':\n            return \"#00b8d4\";\n        }\n      };\n\n      const intiDataSet = dataMetaData => {\n        let codes = Object.keys(dataMetaData);\n        let finalDataset = [];\n        codes.map(code => {\n          let dataObj = {};\n          dataObj.label = code;\n          dataObj.data = dataMetaData[code];\n          dataObj.backgroundColor = getUniqueBackgroundColor(code);\n          finalDataset.push(dataObj);\n          dataObj.borderWidth = 0.5;\n          dataObj.borderColor = \"black\";\n        });\n        return finalDataset;\n      }; // console.log(\"aircraftNos=\",aircraftNos);\n\n\n      setChartData1({\n        labels: aircraftNos,\n        datasets: intiDataSet(dataMetaData)\n      });\n    }).catch(err => {//console.log(err);\n    });\n  }\n\n  function handle(e) {\n    const newdata = { ...data_chart1\n    };\n    newdata[e.target.id] = e.target.value;\n    setData_chart1(newdata); //console.log(newdata)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 12,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root1,\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                color: \"#001C3E\",\n                textAlign: \"center\"\n              },\n              children: \" Stacked Chart for Magnitude of Messages in data \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => handle(e),\n              id: \"top_value\",\n              value: data_chart1.top_value,\n              label: \"Top Values\",\n              defaultValue: \" \",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 9\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 42\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => handle(e),\n              id: \"from_date\",\n              value: data_chart1.from_date,\n              label: \" SELECT FROM DATE \\xA0 \\xA0\",\n              type: \"date\",\n              defaultValue: \"2017-05-24\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => handle(e),\n              id: \"to_date\",\n              value: data_chart1.to_date,\n              label: \" SELECT TO DATE \",\n              type: \"date\",\n              defaultValue: \"2017-05-24\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 9\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingBottom: \"20px\"\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => submit(e),\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\"\n              },\n              children: \" GENERATE \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 43\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => save(e),\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\",\n                float: 'right',\n                marginRight: \"1200px\"\n              },\n              children: \" SAVE \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 84\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(HorizontalBar, {\n            id: \"chart1\",\n            data: chartData1,\n            options: {\n              title: {\n                display: true,\n                text: 'Magnitute of messages in data',\n                fontSize: 20\n              },\n              legend: {\n                display: true,\n                position: 'right'\n              },\n              scales: {\n                xAxes: [{\n                  stacked: true\n                }],\n                yAxes: [{\n                  scaleLabel: {\n                    display: true,\n                    labelString: 'Aircraft Serial Number',\n                    fontStyle: 'bold',\n                    fontColor: '#001C3E'\n                  },\n                  stacked: true\n                }]\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stacked, \"J+I+LocwVwRXvS5tIkML+9KeuHo=\", false, function () {\n  return [useStyles];\n});\n\n_c = Stacked;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stacked\");","map":{"version":3,"sources":["/Users/kanu/Desktop/MHIRJTEST/mhirjWeb/src/Components/Stacked.js"],"names":["React","useState","useEffect","makeStyles","Paper","Grid","HorizontalBar","TextField","Button","saveAs","axios","useStyles","theme","root","flexGrow","marginLeft","marginTop","paper","padding","spacing","textAlign","color","palette","text","secondary","width","height","Stacked","classes","ChartJsImage","require","chartData1","setChartData1","save","e","canvasSave","document","getElementById","toBlob","blob","data_chart1","setData_chart1","from_date","to_date","top_value","submit","preventDefault","aircraftno","ata_main","msg","path","post","then","res","data","JSON","parse","aircraftNos","Object","keys","dataMetaData","map","no","airCraftObj","x","push","getUniqueBackgroundColor","code","intiDataSet","codes","finalDataset","dataObj","label","backgroundColor","borderWidth","borderColor","labels","datasets","catch","err","handle","newdata","target","id","value","root1","textField","shrink","paddingBottom","float","marginRight","title","display","fontSize","legend","position","scales","xAxes","stacked","yAxes","scaleLabel","labelString","fontStyle","fontColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginLeft: '25px',\n        marginTop: '25px',\n    },\n\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        width: theme.spacing(185),\n        height: theme.spacing(120),\n    },\n\n}));\n\n\nexport default function Stacked() {\n    const classes = useStyles();\n    const ChartJsImage = require('chartjs-to-image');\n    const [chartData1, setChartData1] = useState({});\n\n    function save(e) {\n        //save to png\n        const canvasSave = document.getElementById('chart1');\n        canvasSave.toBlob(function(blob) {\n            saveAs(blob, \"StackedChart.png\")\n        })\n    }\n\n    const [data_chart1, setData_chart1] = useState({\n        from_date: \"\",\n        to_date: \"\",\n        top_value: \"\"\n    });\n\n    function submit(e) {\n        e.preventDefault();\n        let aircraftno = [];\n        let ata_main = [];\n        let msg = [];\n\n\n        const path = 'https://mhirjapi.azurewebsites.net/api/Landing_Chart_B/' + data_chart1.top_value + '/' + data_chart1.from_date + '/' + data_chart1.to_date;\n        axios.post(path)\n            .then(res => {\n                //console.log(res,\"response\");\n\n                let data = JSON.parse(res.data);\n                let aircraftNos = Object.keys(data);\n                let dataMetaData = {};\n                aircraftNos.map(no => {\n                    let airCraftObj = data[no];\n                    for (let x in airCraftObj) {\n                        if (dataMetaData[x]) dataMetaData[x].push(airCraftObj[x]);\n                        else dataMetaData[x] = [airCraftObj[x]];\n                    }\n\n\n                })\n                const getUniqueBackgroundColor = (code) => {\n                    switch (code) {\n                        case '21':\n                            return \"#ef5350\";\n                        case '22':\n                            return \"#ec407a\";\n                        case '23':\n                            return \"#ab47bc\";\n                        case '24':\n                            return \"#7e57c2\"\n                        case '26':\n                            return \"#5c6bc0\";\n                        case '27':\n                            return \"#42a5f5\";\n                        case '28':\n                            return \"#29b6f6\";\n                        case '30':\n                            return \"#26c6da\";\n                        case '31':\n                            return \"#26a69a\";\n                        case '32':\n                            return \"#66bb6a\";\n                        case '33':\n                            return \"#9ccc65\";\n                        case '34':\n                            return \"#d4e157\";\n                        case '36':\n                            return \"#ffee58\";\n                        case '38':\n                            return \"#ffca28\";\n                        case '45':\n                            return \"#ffa726\";\n                        case '49':\n                            return \"#8d6e63\";\n                        case '71':\n                            return \"#bdbdbd\";\n                        case '77':\n                            return \"#9e9d24\";\n                        case '78':\n                            return \"#00b8d4\";\n                    }\n                }\n\n                const intiDataSet = (dataMetaData) => {\n                        let codes = Object.keys(dataMetaData);\n                        let finalDataset = [];\n                        codes.map(code => {\n                            let dataObj = {};\n                            dataObj.label = code;\n                            dataObj.data = dataMetaData[code];\n                            dataObj.backgroundColor = getUniqueBackgroundColor(code);\n                            finalDataset.push(dataObj);\n                            dataObj.borderWidth = 0.5;\n                            dataObj.borderColor = \"black\";\n                        });\n                        return finalDataset;\n                    }\n                    // console.log(\"aircraftNos=\",aircraftNos);\n                setChartData1({\n                    labels: aircraftNos,\n                    datasets: intiDataSet(dataMetaData)\n\n                });\n            })\n            .catch(err => {\n                //console.log(err);\n            });\n    }\n\n    function handle(e) {\n        const newdata = {...data_chart1 }\n        newdata[e.target.id] = e.target.value\n        setData_chart1(newdata)\n            //console.log(newdata)\n\n    }\n    return (\n\n        <\n        div className = { classes.root } >\n        <\n        Grid container spacing = { 12 } >\n        <\n        Grid item xs = { 12 } >\n        <\n        form className = { classes.root1 }\n        noValidate autoComplete = \"off\" >\n        <\n        div > < h1 style = {\n            { color: \"#001C3E\", textAlign: \"center\" } } > Stacked Chart\n        for Magnitude of Messages in data < /h1></div >\n        <\n        div > < TextField onChange = {\n            (e) => handle(e) }\n        id = \"top_value\"\n        value = { data_chart1.top_value }\n        label = \"Top Values\"\n        defaultValue = \" \"\n        variant = \"outlined\" / > < /div> <\n        br > < /br> <\n        div > < TextField onChange = {\n            (e) => handle(e) }\n        id = \"from_date\"\n        value = { data_chart1.from_date }\n        label = \" SELECT FROM DATE &nbsp; &nbsp;\"\n        type = \"date\"\n        defaultValue = \"2017-05-24\"\n        className = { classes.textField }\n        InputLabelProps = {\n            { shrink: true, } }\n        /> <\n        TextField onChange = {\n            (e) => handle(e) }\n        id = \"to_date\"\n        value = { data_chart1.to_date }\n        label = \" SELECT TO DATE \"\n        type = \"date\"\n        defaultValue = \"2017-05-24\"\n        className = { classes.textField }\n        InputLabelProps = {\n            { shrink: true, } }\n        /></div >\n        <\n        br > < /br> <\n        div style = {\n            { paddingBottom: \"20px\" } } > < Button onClick = {\n            (e) => submit(e) }\n        variant = \"contained\"\n        style = {\n            { backgroundColor: \"#001C3E\", color: \"WHITE\" } } > GENERATE < /Button> <\n        Button onClick = {\n            (e) => save(e) }\n        variant = \"contained\"\n        style = {\n            { backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" } } > SAVE < /Button></div >\n        <\n        /form> <\n        Paper className = { classes.paper } >\n        <\n        HorizontalBar id = \"chart1\"\n        data = { chartData1 }\n        options = {\n            {\n                title: {\n                    display: true,\n                    text: 'Magnitute of messages in data',\n                    fontSize: 20\n                },\n                legend: {\n                    display: true,\n                    position: 'right'\n                },\n                scales: {\n                    xAxes: [{\n                        stacked: true\n                    }],\n                    yAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Aircraft Serial Number',\n                            fontStyle: 'bold',\n                            fontColor: '#001C3E'\n                        },\n                        stacked: true\n                    }]\n                }\n            }\n        }\n        /></Paper >\n        <\n        /Grid> <\n        /Grid> <\n        /div>\n    );\n}"]},"metadata":{},"sourceType":"module"}